//
// CartSubmissionRequest.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

/** Properties for cart submission. */
public struct CartSubmissionRequest: Codable, JSONEncodable, Hashable {

    /** Map the order in Violet to an order record within your system. */
    public var appOrderId: String?
    /** Gateway used to submit the order. */
    public var appTransactionGateway: String?
    /** Transaction ID representing a transaction in the channels system. */
    public var appTransactionId: String?
    public var orderCustomer: OrderCustomer?
    /** Associate the order with a user or affiliate in your system */
    public var referralId: String?

    public init(appOrderId: String? = nil, appTransactionGateway: String? = nil, appTransactionId: String? = nil, orderCustomer: OrderCustomer? = nil, referralId: String? = nil) {
        self.appOrderId = appOrderId
        self.appTransactionGateway = appTransactionGateway
        self.appTransactionId = appTransactionId
        self.orderCustomer = orderCustomer
        self.referralId = referralId
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case appOrderId = "app_order_id"
        case appTransactionGateway = "app_transaction_gateway"
        case appTransactionId = "app_transaction_id"
        case orderCustomer = "order_customer"
        case referralId = "referral_id"
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(appOrderId, forKey: .appOrderId)
        try container.encodeIfPresent(appTransactionGateway, forKey: .appTransactionGateway)
        try container.encodeIfPresent(appTransactionId, forKey: .appTransactionId)
        try container.encodeIfPresent(orderCustomer, forKey: .orderCustomer)
        try container.encodeIfPresent(referralId, forKey: .referralId)
    }
}

