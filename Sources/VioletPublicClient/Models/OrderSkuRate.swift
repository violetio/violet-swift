//
// OrderSkuRate.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

/** Rates belonging to Order SKUs */
public struct OrderSkuRate: Codable, JSONEncodable, Hashable {

    public enum ModelType: String, Codable, CaseIterable {
        case tax = "TAX"
        case shipping = "SHIPPING"
        case fee = "FEE"
        case duty = "DUTY"
    }
    /** Total Tax amount on Bag */
    public var amount: Int
    public var decimalRate: Double?
    public var dollarAmount: Double?
    /** Rate Name */
    public var name: String
    /** ID of the Order SKU the Rate belongs to */
    public var orderSkuId: Int64
    /** Rate */
    public var rate: Double?
    /** Rate Type */
    public var type: ModelType

    public init(amount: Int, decimalRate: Double? = nil, dollarAmount: Double? = nil, name: String, orderSkuId: Int64, rate: Double? = nil, type: ModelType) {
        self.amount = amount
        self.decimalRate = decimalRate
        self.dollarAmount = dollarAmount
        self.name = name
        self.orderSkuId = orderSkuId
        self.rate = rate
        self.type = type
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case amount
        case decimalRate = "decimal_rate"
        case dollarAmount = "dollar_amount"
        case name
        case orderSkuId = "order_sku_id"
        case rate
        case type
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(amount, forKey: .amount)
        try container.encodeIfPresent(decimalRate, forKey: .decimalRate)
        try container.encodeIfPresent(dollarAmount, forKey: .dollarAmount)
        try container.encode(name, forKey: .name)
        try container.encode(orderSkuId, forKey: .orderSkuId)
        try container.encodeIfPresent(rate, forKey: .rate)
        try container.encode(type, forKey: .type)
    }
}

