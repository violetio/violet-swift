//
// SearchRequest.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

/** Search Request */
public struct SearchRequest: Codable, JSONEncodable, Hashable {

    /** Query */
    public var query: String?
    /** Merchant ID */
    public var merchantId: Int?
    /** Category ID */
    public var categoryId: String?
    /** Category Slug */
    public var categorySlug: String?
    /** Minimum Commission */
    public var minCommission: Double?
    /** Maximum Commission */
    public var maxCommission: Double?
    /** Minimum Price */
    public var minPrice: Int?
    /** Maximum Price */
    public var maxPrice: Int?
    /** Include offers with products */
    public var includeOffers: Bool? = false

    public init(query: String? = nil, merchantId: Int? = nil, categoryId: String? = nil, categorySlug: String? = nil, minCommission: Double? = nil, maxCommission: Double? = nil, minPrice: Int? = nil, maxPrice: Int? = nil, includeOffers: Bool? = false) {
        self.query = query
        self.merchantId = merchantId
        self.categoryId = categoryId
        self.categorySlug = categorySlug
        self.minCommission = minCommission
        self.maxCommission = maxCommission
        self.minPrice = minPrice
        self.maxPrice = maxPrice
        self.includeOffers = includeOffers
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case query
        case merchantId = "merchant_id"
        case categoryId = "category_id"
        case categorySlug = "category_slug"
        case minCommission = "min_commission"
        case maxCommission = "max_commission"
        case minPrice = "min_price"
        case maxPrice = "max_price"
        case includeOffers = "include_offers"
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(query, forKey: .query)
        try container.encodeIfPresent(merchantId, forKey: .merchantId)
        try container.encodeIfPresent(categoryId, forKey: .categoryId)
        try container.encodeIfPresent(categorySlug, forKey: .categorySlug)
        try container.encodeIfPresent(minCommission, forKey: .minCommission)
        try container.encodeIfPresent(maxCommission, forKey: .maxCommission)
        try container.encodeIfPresent(minPrice, forKey: .minPrice)
        try container.encodeIfPresent(maxPrice, forKey: .maxPrice)
        try container.encodeIfPresent(includeOffers, forKey: .includeOffers)
    }
}

