//
// ChannelConnections.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

/** The status object for merchant channels connected */
public struct ChannelConnections: Codable, JSONEncodable, Hashable {

    public enum Status: String, Codable, CaseIterable {
        case complete = "complete"
        case incomplete = "incomplete"
        case needsAttention = "needs_attention"
        case notApplicable = "not_applicable"
    }
    public var error: ModelError?
    /** The status of the given property */
    public var status: Status?
    /** The total count of channels connected to this merchant */
    public var totalConnected: Int?

    public init(error: ModelError? = nil, status: Status? = nil, totalConnected: Int? = nil) {
        self.error = error
        self.status = status
        self.totalConnected = totalConnected
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case error
        case status
        case totalConnected = "total_connected"
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(error, forKey: .error)
        try container.encodeIfPresent(status, forKey: .status)
        try container.encodeIfPresent(totalConnected, forKey: .totalConnected)
    }
}

