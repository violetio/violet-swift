//
// App.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

/** Developer Application */
public struct App: Codable, JSONEncodable, Hashable {

    public enum Status: String, Codable, CaseIterable {
        case inactive = "INACTIVE"
        case active = "ACTIVE"
        case disabled = "DISABLED"
    }
    public var id: Int64?
    /** User ID of Owner */
    public var ownerId: Int64
    public var appSecret: String
    /** The name of the team/business/project */
    public var name: String
    /** App description */
    public var description: String?
    /** Remote Callback URL */
    public var authCallbackUrl: String?
    /** Auth Redirect URL */
    public var authRedirectUrl: String?
    /** Remote url of the icon file. */
    public var iconUrl: String?
    /** API Version */
    public var apiVersion: String?
    /** App Status */
    public var status: Status?
    /** Date of account creation */
    public var dateCreated: Date?
    /** Date of last account update */
    public var dateLastModified: Date?

    public init(id: Int64? = nil, ownerId: Int64, appSecret: String, name: String, description: String? = nil, authCallbackUrl: String? = nil, authRedirectUrl: String? = nil, iconUrl: String? = nil, apiVersion: String? = nil, status: Status? = nil, dateCreated: Date? = nil, dateLastModified: Date? = nil) {
        self.id = id
        self.ownerId = ownerId
        self.appSecret = appSecret
        self.name = name
        self.description = description
        self.authCallbackUrl = authCallbackUrl
        self.authRedirectUrl = authRedirectUrl
        self.iconUrl = iconUrl
        self.apiVersion = apiVersion
        self.status = status
        self.dateCreated = dateCreated
        self.dateLastModified = dateLastModified
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case id
        case ownerId = "owner_id"
        case appSecret = "app_secret"
        case name
        case description
        case authCallbackUrl = "auth_callback_url"
        case authRedirectUrl = "auth_redirect_url"
        case iconUrl = "icon_url"
        case apiVersion = "api_version"
        case status
        case dateCreated = "date_created"
        case dateLastModified = "date_last_modified"
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(id, forKey: .id)
        try container.encode(ownerId, forKey: .ownerId)
        try container.encode(appSecret, forKey: .appSecret)
        try container.encode(name, forKey: .name)
        try container.encodeIfPresent(description, forKey: .description)
        try container.encodeIfPresent(authCallbackUrl, forKey: .authCallbackUrl)
        try container.encodeIfPresent(authRedirectUrl, forKey: .authRedirectUrl)
        try container.encodeIfPresent(iconUrl, forKey: .iconUrl)
        try container.encodeIfPresent(apiVersion, forKey: .apiVersion)
        try container.encodeIfPresent(status, forKey: .status)
        try container.encodeIfPresent(dateCreated, forKey: .dateCreated)
        try container.encodeIfPresent(dateLastModified, forKey: .dateLastModified)
    }
}

