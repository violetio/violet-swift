//
// ProductVariantValue.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

/** Product Variant Value */
public struct ProductVariantValue: Codable, JSONEncodable, Hashable {

    public var id: String?
    /** ID of the Variation */
    public var variantId: String
    /** Name */
    public var name: String?
    /** Display Order */
    public var displayOrder: Int?
    /** Color/Pattern Swatch URL */
    public var swatch: String?
    /** Hex Code */
    public var hex: String?

    public init(id: String? = nil, variantId: String, name: String? = nil, displayOrder: Int? = nil, swatch: String? = nil, hex: String? = nil) {
        self.id = id
        self.variantId = variantId
        self.name = name
        self.displayOrder = displayOrder
        self.swatch = swatch
        self.hex = hex
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case id
        case variantId = "variant_id"
        case name
        case displayOrder = "display_order"
        case swatch
        case hex
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(id, forKey: .id)
        try container.encode(variantId, forKey: .variantId)
        try container.encodeIfPresent(name, forKey: .name)
        try container.encodeIfPresent(displayOrder, forKey: .displayOrder)
        try container.encodeIfPresent(swatch, forKey: .swatch)
        try container.encodeIfPresent(hex, forKey: .hex)
    }
}

