//
// ProductVariant.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

/** Product Variant */
public struct ProductVariant: Codable, JSONEncodable, Hashable {

    public var id: String?
    /** Product ID */
    public var productId: String
    public var name: String?
    /** Is this a visual variant */
    public var visual: Bool? = false
    /** Product Variant values */
    public var values: [ProductVariantValue]?
    /** Display Order */
    public var displayOrder: Int?

    public init(id: String? = nil, productId: String, name: String? = nil, visual: Bool? = false, values: [ProductVariantValue]? = nil, displayOrder: Int? = nil) {
        self.id = id
        self.productId = productId
        self.name = name
        self.visual = visual
        self.values = values
        self.displayOrder = displayOrder
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case id
        case productId = "product_id"
        case name
        case visual
        case values
        case displayOrder = "display_order"
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(id, forKey: .id)
        try container.encode(productId, forKey: .productId)
        try container.encodeIfPresent(name, forKey: .name)
        try container.encodeIfPresent(visual, forKey: .visual)
        try container.encodeIfPresent(values, forKey: .values)
        try container.encodeIfPresent(displayOrder, forKey: .displayOrder)
    }
}

