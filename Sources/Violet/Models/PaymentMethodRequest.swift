//
// PaymentMethodRequest.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

/** The payment method request for a cart. If the token is provided no card data is required. */
public struct PaymentMethodRequest: Codable, JSONEncodable, Hashable {

    /** Map the order in Violet to an order record within your system. */
    public var appOrderId: String?
    /** CVC code on the credit or debit card. */
    public var cardCvc: Int?
    /** Expiration month of the credit or debit card. */
    public var cardExpMonth: Int?
    /** Expiration year of the credit or debit card. */
    public var cardExpYear: Int?
    /** Number on the credit or debit card. */
    public var cardNumber: String?
    /** Postal Code of the credit or debit card. */
    public var cardPostalCode: String?
    /** Submit cart immediately after applying the payment method. */
    public var completeCheckout: Bool?
    /** Trigger payment intent based capture */
    public var intentBasedCapture: Bool?
    /** Generated payment token. */
    public var token: String?

    public init(appOrderId: String? = nil, cardCvc: Int? = nil, cardExpMonth: Int? = nil, cardExpYear: Int? = nil, cardNumber: String? = nil, cardPostalCode: String? = nil, completeCheckout: Bool? = nil, intentBasedCapture: Bool? = nil, token: String? = nil) {
        self.appOrderId = appOrderId
        self.cardCvc = cardCvc
        self.cardExpMonth = cardExpMonth
        self.cardExpYear = cardExpYear
        self.cardNumber = cardNumber
        self.cardPostalCode = cardPostalCode
        self.completeCheckout = completeCheckout
        self.intentBasedCapture = intentBasedCapture
        self.token = token
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case appOrderId = "app_order_id"
        case cardCvc = "card_cvc"
        case cardExpMonth = "card_exp_month"
        case cardExpYear = "card_exp_year"
        case cardNumber = "card_number"
        case cardPostalCode = "card_postal_code"
        case completeCheckout = "complete_checkout"
        case intentBasedCapture = "intent_based_capture"
        case token
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(appOrderId, forKey: .appOrderId)
        try container.encodeIfPresent(cardCvc, forKey: .cardCvc)
        try container.encodeIfPresent(cardExpMonth, forKey: .cardExpMonth)
        try container.encodeIfPresent(cardExpYear, forKey: .cardExpYear)
        try container.encodeIfPresent(cardNumber, forKey: .cardNumber)
        try container.encodeIfPresent(cardPostalCode, forKey: .cardPostalCode)
        try container.encodeIfPresent(completeCheckout, forKey: .completeCheckout)
        try container.encodeIfPresent(intentBasedCapture, forKey: .intentBasedCapture)
        try container.encodeIfPresent(token, forKey: .token)
    }
}

