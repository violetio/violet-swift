//
// RefundErrors.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

/** Errors associated to a refund */
public struct RefundErrors: Codable, JSONEncodable, Hashable {

    public var errorCode: Int?
    public var errorMessage: String?
    public var id: Int64?
    /** ID of the Refund this Error is associated to */
    public var refundId: Int64?

    public init(errorCode: Int? = nil, errorMessage: String? = nil, id: Int64? = nil, refundId: Int64? = nil) {
        self.errorCode = errorCode
        self.errorMessage = errorMessage
        self.id = id
        self.refundId = refundId
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case errorCode = "error_code"
        case errorMessage = "error_message"
        case id
        case refundId = "refund_id"
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(errorCode, forKey: .errorCode)
        try container.encodeIfPresent(errorMessage, forKey: .errorMessage)
        try container.encodeIfPresent(id, forKey: .id)
        try container.encodeIfPresent(refundId, forKey: .refundId)
    }
}

